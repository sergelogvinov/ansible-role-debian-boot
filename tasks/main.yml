
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/empty.yml"

- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_architecture }}.yml"
    - "../vars/empty.yml"

- name: Get Talos
  become: yes
  get_url:
    url: "{{ item.url }}"
    dest: "/boot/{{ item.name }}"
    checksum: ""
  with_items:
    - { url: "{{ debian_kernel }}", checksum: "{{ debian_kernel_sha }}", name: debian-kernel     }
    - { url: "{{ debian_initrd }}", checksum: "{{ debian_initrd_sha }}", name: debian-initrd.xz  }

- name: Add grub menu (debian)
  become: yes
  template:
    src: grub/debian.j2
    dest: /etc/grub.d/15_debian_installer
    mode: 0755
  when: debian_grub and ansible_os_family == "Debian"
  notify: Update-grub

- name: Add grub menu (redhat)
  become: yes
  template:
    src: grub/centos.j2
    dest: /etc/grub.d/15_debian_installer
    mode: 0755
  when: debian_grub and ansible_os_family == "RedHat"
  notify: Update-grub

- meta: flush_handlers

- name: packages (debian)
  become: yes
  apt:
    name: 'kexec-tools'
  when: debian_kexec and ansible_os_family == "Debian"

- name: Run debian installer
  block:
    - name: Run kexec
      become: yes
      command: "kexec {{ item }}"
      timeout: 30
      register: result
      failed_when: result.rc != 0
      with_items:
        - "-l /boot/debian-kernel --initrd=/boot/debian-initrd.xz --append=\"{{ debian_cmdline }} {{ debian_cmdline_net }} {{ debian_cmdline_addon }}\""
        - "-e"
      when: debian_kexec

  rescue:
    - name: check server
      connection: local
      command: "ping -c 10 {{ ansible_default_ipv4['address'] }}"
      when: debian_kexec
